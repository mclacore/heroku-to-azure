{"version":3,"sources":["components/ActivityDisplay.js","components/Choices.js","components/IndividualActivity.js","components/StoredActivities.js","components/DeleteActivities.js","services/activities.js","App.js","index.js"],"names":["ActivityDisplay","name","fontColors","randColor","Math","floor","random","length","id","style","color","Choices","handleNewActivity","handleAddActivity","onClick","IndividualActivity","info","activity","StoredActivities","list","map","idx","DeleteActivities","handleDeleteActivities","axios","defaults","headers","common","baseUrl","get","then","response","data","post","console","log","App","useState","activities","setActivities","newActivity","setNewActivity","useEffect","activityService","className","Container","Row","Col","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13439bed.chunk.js","sourcesContent":["import React from 'react'\n\nconst ActivityDisplay = ({ name }) => {\n  let fontColors = ['#e6194B', '#3cb44b', '#4363d8', '#f58231', '#911eb4', '#42d4f4', '#f032e6', '#bfef45', '#fabed4', '#469990', '#dcbeff', '#9A6324', '#800000', '#aaffc3', '#808000', '#ffd8b1', '#000075', '#a9a9a9'];\n  \n  let randColor = fontColors[Math.floor(Math.random() * fontColors.length)];\n  return (\n    <h1 id=\"question\">Do you want to <span id='suggestedActivity' style={{color: `${randColor}`}}>{ name }</span> today?</h1>\n  )\n}\n\nexport default ActivityDisplay","import React from 'react'\n\nconst Choices = ({ handleNewActivity, handleAddActivity, name }) => {\n\n  return (\n    <div>\n      <button id=\"primary-btn\" onClick={() => handleNewActivity()}>No thanks...</button>\n      <button id=\"success-btn\" onClick={() => handleAddActivity(name)}>Sounds fun!</button>\n      \n    </div>\n  )\n}\n\nexport default Choices","import React from 'react'\n\nconst IndividualActivity = ({ info }) => {\n  return (\n    <li>{info.activity}</li>\n  )\n}\n\nexport default IndividualActivity","import React from 'react'\nimport IndividualActivity from './IndividualActivity'\n\nconst StoredActivities = ({ list }) => {\n  return (\n    list.map((activity, idx) => {\n      return <IndividualActivity key={`${idx}-activity-${activity}`} info={activity}/>\n    })\n  )\n}\n\nexport default StoredActivities","import React from 'react'\n\nconst DeleteActivities = ({ handleDeleteActivities}) => {\n  return (\n    <button id=\"danger-btn\" onClick={() => handleDeleteActivities()}>Clear Activities</button>\n  )\n}\n\nexport default DeleteActivities","import axios from 'axios'\n\naxios.defaults.headers.common = {\n  \"Content-Type\": \"application/json\"\n}\n\nconst baseUrl = 'api/activities' \n\nconst getAllActivities = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getNewActivity = () => {\n  const request = axios.get(`${baseUrl}/new`)\n  return request.then(response => response.data)\n}\n\nconst addActivity = activity => {\n  const request = axios.post(baseUrl, activity)\n  \n  return request.then(response => {\n    console.log('this got sent back from the backend', response)\n    return response.data\n  })\n}\n\nconst deleteAllActivities = () => {\n  const request = axios.get(`${baseUrl}/delete`)\n  return request.then(response => response.data)\n}\n\nexport default { getAllActivities, getNewActivity, addActivity, deleteAllActivities }","import React, { useState, useEffect } from 'react'\nimport ActivityDisplay from './components/ActivityDisplay'\nimport Choices from './components/Choices'\nimport StoredActivities from './components/StoredActivities'\nimport DeleteActivities from './components/DeleteActivities'\nimport activityService from './services/activities'\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\n\nfunction App() {\n  const [activities, setActivities] = useState([])\n  const [newActivity, setNewActivity] = useState('')\n\n  useEffect(() => {\n    activityService\n      .getAllActivities()\n      .then(data => {\n        setActivities(data.activities)\n      })\n\n    activityService\n      .getNewActivity()\n      .then(data => {\n        setNewActivity(data.activity)\n      })\n  }, [])\n\n  const handleNewActivity = () => {\n    activityService\n      .getNewActivity()\n      .then(data => {\n        setNewActivity(data.activity)\n      })\n  }\n\n  const handleAddActivity = newActivity => {\n    activityService\n      .addActivity({\n        activity: newActivity,\n      })\n      .then(() => {\n        setActivities([...activities, {activity: newActivity}])\n      })\n    activityService\n      .getNewActivity()\n      .then(data => {\n        setNewActivity(data.activity)\n      })\n  }\n\n  const handleDeleteActivities = () => {\n    activityService\n      .deleteAllActivities()\n      .then(() => {\n        setActivities([])\n      })\n  }\n\n  return (\n    <div className='container'>\n      <Container>\n        <Row id=\"first-row\">\n          <Col>\n            <ActivityDisplay name={newActivity}/>\n          </Col>\n        </Row>\n        <Row id=\"second-row\">\n          <Col> \n            <Choices handleNewActivity={handleNewActivity} handleAddActivity={handleAddActivity} name={newActivity}/>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <ul>\n              <h2>Today's Activities: {activities.length}</h2>\n              <StoredActivities list={activities} />\n            </ul>\n          </Col>\n        </Row>\n        <Row id=\"fourth-row\">\n          <Col>\n            <DeleteActivities handleDeleteActivities={handleDeleteActivities} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}